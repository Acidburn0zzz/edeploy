#!/bin/bash

dir="$1"
dist="$2"
version="$3"
mirror="$4"
ROLE=base

ORIG=$(cd $(dirname $0); pwd)

fatal_error() {
	echo $1;
	exit 1
}

check_binary() {
	which $1 || fatal_error "$1 is missing"
}

if [ -z "$1" -o -z "$dist" -o -z "$version" ]; then
   echo "Usage: $0 <directory name> <distro name>" 1>&2
   exit 1
fi

check_binary dh_testdir
check_binary alien
check_binary wget
check_binary debootstrap
check_binary chroot
check_binary sed

set -e				# abort on failure
set -x				# print commands

if [ ! -d "$dir" ]; then
    mkdir -p "$dir"

    debootstrap --arch $ARCH --variant=minbase $dist "$dir" "$mirror"
    
    # workaround no signature downloaded
    rm -f "$dir"/var/lib/apt/lists/*[es]
    chroot "$dir" apt-get update
fi

cp -p ${ORIG}/policy-rc.d ${dir}/usr/sbin/

cat >> "$dir/etc/apt/apt.conf" <<EOF
APT::Install-Recommends "0" ;
APT::Install-Suggests "0" ; 
EOF

cleanup() {
    umount ${dir}/dev
}

trap cleanup 0

mount -obind /dev ${dir}/dev

case $dist in
    precise)
	PACKAGES="linux-image-virtual"
	;;
    wheezy|squeeze)
	PACKAGES="linux-image-amd64 ipmitool"
	;;
    *)
	echo "unsupported distribution: $dist" 2>&1
	exit 1
	;;
esac

export DEBIAN_FRONTEND=noninteractive

chroot "$dir" apt-get update

chroot "$dir" apt-get install -y --force-yes openssh-server parted $PACKAGES net-tools isc-dhcp-client grub-pc kbd rsync ifupdown lshw netbase net-tools dmidecode bash curl hdparm sdparm

# Inject HP RAID CLI tool
if [ ! -r hpacucli-9.40-12.0.x86_64.rpm ]; then
    wget http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/2013.02.0/hp/swpackages/hpacucli-9.40-12.0.x86_64.rpm
fi
if [ ! -r hpacucli_9.40-13_amd64.deb  ]; then
    alien hpacucli-9.40-12.0.x86_64.rpm
fi
cp hpacucli_9.40-13_amd64.deb "$dir"/tmp/hpacucli.deb
chroot "$dir" apt-get -y install lib32gcc1 lib32stdc++6 python-pexpect
chroot "$dir" dpkg -i /tmp/hpacucli.deb
rm "$dir"/tmp/hpacucli.deb

# Ubuntu specific
if [ $dist = precise ]; then
    sed -i 's/#GRUB_TERMINAL=console/GRUB_TERMINAL=console/' ${dir}/etc/default/grub
    sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT=/' ${dir}/etc/default/grub
fi

# let the key be generated on first boot
rm -f "$dir"/etc/ssh/*key*

chroot "$dir" apt-get clean

rm -f ${dir}/var/tmp/* ${dir}/tmp/*

echo -e "root\nroot"|chroot "$dir" passwd

mkdir -p "$dir/var/lib/edeploy"

echo -e "\nVersion ${version}\n" > ${dir}/etc/motd
echo -e "VERS=${version}\nROLE=${ROLE}\n" > ${dir}/var/lib/edeploy/conf

[ -f ${dir}/etc/rc.local.REAL ] || cp -p ${dir}/etc/rc.local ${dir}/etc/rc.local.REAL

cat > ${dir}/etc/rc.local <<EOF
#!/bin/bash

set -e

mv /etc/rc.local.REAL /etc/rc.local

touch /var/log/first-boot.d.log
chmod 0600 /var/log/first-boot.d.log

echo -n "Running first boot scripts..."
run-parts /etc/first-boot.d >> /var/log/first-boot.d.log 2>&1
echo done

exit 0
EOF

mkdir -p ${dir}/etc/first-boot.d

cat > ${dir}/etc/first-boot.d/01-ssh <<EOF
#!/bin/bash

export DEBIAN_FRONTEND=noninteractive
dpkg-reconfigure openssh-server
EOF

chmod 755 ${dir}/etc/rc.local ${dir}/etc/first-boot.d/01-ssh
