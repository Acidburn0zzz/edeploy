#!/bin/bash
#
# Copyright (C) 2013 eNovance SAS <licensing@enovance.com>
#
# Author: Frederic Lepied <frederic.lepied@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

BASE="$0"
ROLE="$1"
FROM="$2"
TO="$3"
DEST="$4"

ORIG=$(cd $(dirname $0); pwd)
FDIR=${DEST}/install/${FROM}/${ROLE}
TDIR=${DEST}/install/${TO}/${ROLE}
METADATA_DIR=${DEST}/metadata/${FROM}/${ROLE}/${TO}
EXCLUDE_FILE=${METADATA_DIR}/exclude
setup_metadata() {
    if [ ! -d $METADATA_DIR ]; then
        mkdir -p $METADATA_DIR
    fi

    if [ ! -f $EXCLUDE_FILE ]; then
        PRIOR_EXCLUDE=$(find ${DEST}/metadata/*/${ROLE}/${FROM}/exclude || true)
        if [ ! -z $PRIOR_EXCLUDE ]; then
            echo "Found an exclude file for release ${FROM}"
            echo "Let's use it as default for this version too"
            echo "Using $PRIOR_EXCLUDE as exclude file"
            cp $PRIOR_EXCLUDE $EXCLUDE_FILE
            return
        fi

        echo "No exclude file found, creating a default one"
        echo "Please check that $EXCLUDE file is featuring all directories or files to ignore during rsync"
        echo "Any mistake in this file could lead to a bad upgrade path and damage setup"
        touch $EXCLUDE_FILE
        cat >> $EXCLUDE_FILE << EOF
/dev/
/proc/
/sys/
/mnt/
/run/
/tmp/
/home/
/var/
/root/
/etc/
/boot/grub/*.mod
/boot/grub/locale/
/boot/grub/*lst
/boot/grub/*img
/boot/grub/*.o
/boot/grub/grubenv
/lost+found
EOF
    fi
}

if [ $# != 4 ]; then
    echo "Usage: $0 <role> <base version> <new version> <top dir>" 1>&2
    exit 1
fi

if [ ! -d "$FDIR" ]; then
    echo "Source directory $FDIR doesn't exist" 1>&2
    exit 1
fi

export DEBIAN_FRONTEND=noninteractive

set -e
set -x

if [ ! -d ${TDIR} ]; then
    mkdir -p ${TDIR}

    echo -n "Syncing ${FDIR} to ${TDIR}..."
    rsync -a --delete ${FDIR}/ ${TDIR}/
    echo "done"
fi

cleanup() {
    umount ${TDIR}/dev
}

trap cleanup 0

mount -obind /dev ${TDIR}/dev
chroot ${TDIR} apt-get update
cp -p ${ORIG}/edeploy ${TDIR}/usr/sbin/
echo -e "VERS=${TO}\nROLE=${ROLE}\n" > ${TDIR}/var/lib/edeploy/conf

mkdir -p ${TDIR}/etc/default/grub.d
echo 'exit 0' > ${TDIR}/etc/default/grub.d/edeploy.cfg

script="$BASE".d/${ROLE}_${FROM}_${TO}.upgrade

if [ -x "$script" ]; then
    "$script" $ROLE $FROM $TO $TDIR
fi

rm -f ${TDIR}/etc/default/grub.d/edeploy.cfg

chroot ${TDIR} apt-get clean
chroot ${TDIR} dpkg -l > ${TDIR}/../${ROLE}.dpkg

setup_metadata
