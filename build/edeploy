#!/bin/bash
#
# Copyright (C) 2013 eNovance SAS <licensing@enovance.com>
#
# Author: Frederic Lepied <frederic.lepied@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

progname="$0"

if [ -r /var/lib/edeploy/conf ]; then
    . /var/lib/edeploy/conf
fi

function upgrade() {

    TARGET="$1"

    if [ -z "$TARGET" ]; then
        echo "Usage: $progname upgrade <target version>" 1>&2
        echo "Missing <target version> ! Exiting !"
        exit 1
    fi

    set -e
    set -x

    mkdir -p /var/lib/edeploy

    rsync -a rsync://${RSERV}:${RSERV_PORT}/metadata/${VERS}/${ROLE}/${TARGET}/ /var/lib/edeploy/${TARGET}/

    cd /var/lib/edeploy/${TARGET}/

    if [ -x pre ]; then
        ./pre
    fi

    rsync -av --delete-after --exclude-from=exclude rsync://${RSERV}:${RSERV_PORT}/install/${TARGET}/${ROLE}/ / > /var/lib/edeploy/rsync_${VERS}_${TARGET}.out

    set +e

    if [ -x post ]; then
        ./post
        RET=$?
    fi

    echo -e "\nVersion ${TARGET}\n" > /etc/motd
    echo -e "VERS=${TARGET}\nROLE=${ROLE}\nRSERV=${RSERV}\nRSERV_PORT=${RSERV_PORT}\n" > /var/lib/edeploy/conf

    echo "Upgraded to $TARGET"

    if [ "$RET" = "100" ]; then
        echo "Reboot requested by the upgrade process..."
        sync
        sleep 2
        reboot
    fi
}

function list() {
    rsync rsync://${RSERV}:${RSERV_PORT}/metadata/${VERS}/${ROLE}/ 2> /dev/null | sed -e 's/.* //' | grep -v '^\.$' | grep -v '^\.$'
}

function verify() {
    if [ -r /var/lib/edeploy/$VERS/exclude ]; then
        EXCLUDE=--exclude-from=/var/lib/edeploy/$VERS/exclude
    else
        EXCLUDE=" --exclude /proc --exclude /dev --exclude /sys --exclude /var/log --exclude /tmp --exclude /run --exclude /var/tmp"
    fi

    rsync --dry-run -av --delete-after $EXCLUDE rsync://${RSERV}:${RSERV_PORT}/install/${VERS}/${ROLE}/ /
}

function check_args() {
    if [ -z "$VERS" -o -z "$ROLE" -o -z "$RSERV" -o -z "$RSERV_PORT" ]; then
        echo "/var/lib/edeploy/conf must contain RSERV, VERS, ROLE and RSERV_PORT" 1>&2
        exit 1
    fi

}

function help() {
    usage
    cat <<EOF

    upgrade: launch the upgrade process to version <target version>.

    list: list the available target versions on the server.

    verify: verify the modified files regarding the version on the server.

    help: display this help message.

EOF
}

function usage() {
    echo "Usage: $progname (upgrade <target version>|list|verify|help)"
}

command="$1"
shift

case "$command" in
	help)
		help
	;;
	upgrade|list|verify)
		check_args
		"$command" "$@"
	;;

	*)
		usage 1>&2
		exit 1
	;;
esac

