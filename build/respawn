#!/bin/bash
# This script is about respawning /init
# It will first clean the current environment and respawn /init

. /init.common

do_log() {
    log "RESPAWN: $@" | tee -a /log
}

clean_temp_files() {
rm -f /user-data
rm -f /configure
rm -f /vars
rm -f /hw.py
rm -rf /post_rsync
rm -rf /*.log
rm -rf /*.log.gz
echo > /log
echo > /mcelog
}

kill_process() {
for process in $@; do
    do_log "Killing $process"
    pkill -9 $process
done
}

umount_dir() {
directory=$1
fuser -k $directory/*
for retry in `seq 1 5`; do
    fail=0
    for dir in $(grep $directory /proc/mounts | awk '{print $2}' | sort -r); do
        umount $dir || fail=$(($fail + 1))
    done
    if [ $fail -eq 0 ]; then
        return 0
    fi
done

do_log "Unable to umount $directory"
exit 1
}

do_log "Initializing respawning"
lldpad -k
kill_process udevd systemd-udevd dhclient tail
umount_dir "/chroot"
umount_dir "/run"
umount_dir "/sys"
umount_dir "/proc"
clean_temp_files
do_log "Starting init"
LC_ALL=C exec /init NOCONSOLE=true
