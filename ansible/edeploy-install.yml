---
- hosts: edeployservers

  vars:
    - pxemngr: false
    - edeploy_config_path: /etc/edeploy
    - edeploy_config_file: /etc/edeploy.conf
    - cgi_config:
      - { name: CONFIGDIR, value: "{{ edeploy_config_path }}" }
      - { name: USEPXEMNGR, value: "True" }
      - { name: HWDIR, value: /var/lib/edeploy/hw }
      - { name: LOGDIR, value: /var/lib/edeploy/logs }
      - { name: HEALTHDIR, value: /var/lib/edeploy/health }
      - { name: LOCKFILE, value: "{{ edeploy_lock_file }}" }
    - edeploy_cgi_scripts:
      - { name: /srv/edeploy/server/upload-health.py, value: "{{ edeploy_health_cgi_script_path }}" }
      - { name: /srv/edeploy/server/upload.py, value: "{{ edeploy_cgi_script_path }}" }
    - edeploy_directories:
      - "{{ edeploy_config_path }}"
      - /var/lib/debootstrap/install
      - /var/lib/edeploy/hw
      - /var/lib/edeploy/logs
      - /var/lib/edeploy/health

  user: root

  tasks:

  - name: include OS specific variables
    include_vars: "{{ ansible_os_family }}.yml"

  - name: ensure needed packages for eDeploy are installed
    package: >
      pkg={{ item }}
      state=present
    with_items: "{{ edeploy_needed_packages }}"
    when: ansible_os_family == 'RedHat'

  - name: install python modules
    pip: name=hardware

  - name: extract eDeploy git repo
    git: >
      repo=https://github.com/redhat-cip/edeploy.git
      dest=/srv/edeploy force=no

  - name: create eDeploy config dir
    file: >
      path={{ edeploy_config_path }}
      state=directory
      owner={{ edeploy_dir_owner }}
      group={{ edeploy_dir_group }}

  - name: create eDeploy lock dir (rhel)
    file: >
      path=/var/run/edeploy
      state=directory
      owner={{ edeploy_dir_owner }}
      group={{ edeploy_dir_group }}
    when: ansible_os_family == 'RedHat'

  - name: copy config files
    cp: >
      src=/srv/edeploy/config/*
      dest=/etc/edeploy

  - name: enable pxemngr support in CGI config
    ini_file: >
      dest={{ edeploy_config_file }}
      section=SERVER
      option=USEPXEMNGR
      value=True
      mode=0644
    when: pxemngr

  - name: set stuff in CGI config
    ini_file: >
      dest={{ edeploy_config_file }}
      section=SERVER
      option={{ item.name }}
      value={{ item.value }}
    with_items: "{{ cgi_config }}"

  - name: set pxemngr URL in CGI config
    ini_file: >
      dest=/etc/edeploy.conf
      section=SERVER
      option=PXEMNGRURL
      value=http://{{ ansible_default_ipv4["address"] }}/
      mode=0644
    when: pxemngr

  - name: install eDeploy CGI scripts
    file: >
      src={{ item.name }}
      dest={{ item.value }}
      state=link
    with_items: "{{ edeploy_cgi_scripts }}"

  - name: owner of state file
    file: >
      path=/etc/edeploy/state
      owner={{ edeploy_dir_owner }}
      group={{ edeploy_dir_group }}

  - name: create edeploy directories
    file: >
      path={{ item }}
      state=directory
      owner={{ edeploy_dir_owner }}
      group={{ edeploy_dir_group }}
    with_items: "{{ edeploy_directories }}"

  - name: link install trees location for web server
    file: >
      src=/var/lib/debootstrap/install
      dest=/var/www/install
      state=link

  - name: fix cmdb permissions
    file: >
      path={{ item }}
      owner={{ edeploy_dir_owner }}
      group={{ edeploy_dir_group }}
    with_fileglob: /etc/edeploy/*.cmdb

  - name: create rsync conf file
    copy: >
      src=rsyncd.conf
      dest=/etc/rsyncd.conf

  - name: enable rsync daemon
    lineinfile: >
      dest=/etc/default/rsync
      regexp=RSYNC_ENABLE=
      line="RSYNC_ENABLE=true"
      state=present
    notify: start rsync daemon
    when: ansible_os_family == 'Debian'

  - name: install eDeploy profile in pxemngr
    template: >
      src=edeploy.prof
      dest=/var/lib/tftpboot/pxelinux.cfg/profiles/edeploy.prof
      mode=0644
    notify: sync bootnames
    when: pxemngr

  - name: enable edeploy site in apache (rhel)
    copy: >
      src=edeploy-httpd.conf
      dest=/etc/httpd/conf.d/edeploy.conf
    notify: enable edeploy site (rhel)
    when: ansible_os_family == 'RedHat'

  - name: install eDeploy AHC profile in pxemngr
    template: >
      src=health-check.prof
      dest=/var/lib/tftpboot/pxelinux.cfg/profiles/health-check.prof
      mode=0644
    notify: sync bootnames
    when: pxemngr

  - name: add tmpfile configuration (rhel 7+)
    template: >
      src=tmpfiles-edeploy.conf
      dest=/etc/tmpfiles.d/edeploy.conf
      mode=0644
    when: ansible_os_family == 'RedHat' and "{{ ansible_distribution_version | version_compare('7', '>=') }}"
  handlers:
    - name: sync bootnames
      command: pxemngr syncbootnames
      notify: set default PXE boot to eDeploy
    - name: set default PXE boot to eDeploy
      command: pxemngr nextboot default edeploy
    - name: start rsync daemon
      service: name=rsync state=started
    - name: enable edeploy site (deb)
      shell: a2ensite edeploy; service apache2 restart
    - name: enable edeploy site (rhel)
      shell: systemctl restart httpd.service
