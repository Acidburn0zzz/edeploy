
# -*- python -*-

import hpacucli

cli = hpacucli.Cli(debug=True)
cli.launch()

disk1 = var['disk1']
disk2 = var['disk2']
slot = 'slot=' + var['slot1']

print '# Removing disks'
cli.ctrl_delete(slot)

print '# Creating SSD array'
disk = cli.ctrl_create_ld(slot, (disk1, disk2), raid='1')
print "# -> %s" % disk
print "Creating Partitions"
run('parted -a optimal --script %s mktable gpt' % disk)
run('parted -a optimal --script %s mkpart primary ext4 0 256' % disk)
run('parted --script %s set 1 boot on' % disk)
run('parted -a optimal --script %s mkpart primary 257 100%%' % disk)
run('parted --script %s set 2 lvm on' % disk)
run('parted --script %s align-check optimal 1' % disk)
run('parted --script %s align-check optimal 2' % disk)
print "Creating LVM"
run('pvcreate -f -y --dataalignment 512k %s%d' % (disk, 2))
run('vgcreate -f -y --dataalignment 512k rootfs %s%d' (%disk, 2))
run('lvcreate rootfs -n slash -L 20G')
run('lvcreate rootfs -n var -L 20G')
run('lvcreate rootfs -n home -L 2G')
run('lvcreate rootfs -n root -L 10G')
run('lvcreate rootfs -n swap -L 2G')
print "Creating FS"
run('mkfs.ext4 -L slash -m 0 -O extent -E stride=32,stripe_width=32 /dev/mapper/rootfs-slash')
run('mkfs.ext4 -L var -m 0 -O extent -E stride=32,stripe_width=32 /dev/mapper/rootfs-var')
run('mkfs.ext4 -L home -m 0 -O extent -E stride=32,stripe_width=32 /dev/mapper/rootfs-home')
run('mkfs.ext4 -L root -m 0 -O extent -E stride=32,stripe_width=32 /dev/mapper/rootfs-root')
run('mkswap /dev/mapper/rootfs-swap')
print

for idx in range(3, 9):
    disk_name = 'disk%d' % idx
    slot_name = 'slot=' + var['slot%d' % idx]
    print '# Creating disk%d (%s)' % (idx, var[disk_name])
    var[disk_name] = cli.ctrl_create_ld(slot_name, (var[disk_name],), raid='0')
    print "# -> %s" % var[disk_name]
    print

set_role('ceph', 'D7-F.1.0.0', disk)
