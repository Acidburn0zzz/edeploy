
# -*- python -*-
import subprocess
from time import sleep

run('dmsetup remove_all || /bin/true')

run('megacli -CfgLdDel -LALL -Force -aALL')
run('sleep 10; ls /sys/block/ | grep "^sd" >/before || true')
run('megacli -CfgLdAdd -r1 [%s, %s] -a0' % (var['id0'], var['id1']))
run('sleep 10; ls /sys/block/ | grep "^sd" >/after')
bootable_disk = '/dev/' + subprocess.Popen('/usr/bin/diff -ub /before /after | grep "^+sd" | tr -d "+"', shell=True, stdout=subprocess.PIPE).stdout.read().rstrip()

for disk, path in ((bootable_disk, '/chroot'), ):
    run('parted -a optimal --script %s mktable gpt' % disk)
    run('parted -a optimal --script %s mkpart primary 0%% 10' % disk)
    sleep(2)
    run('parted --script %s set 1 boot on' % disk)
    sleep(0.5)
    run('parted --script %s set 1 bios_grub on' % disk)
    sleep(0.5)
    run('parted -a optimal --script %s mkpart primary ext2 10 256 ' % disk)
    sleep(0.5)
    run('parted -a optimal --script %s mkpart primary 257 100%%' % disk)
    sleep(0.5)
    run('parted --script %s set 3 lvm on' % disk)
    run('parted --script %s align-check optimal 1' % disk)
    run('parted --script %s align-check optimal 2' % disk)
    run('parted --script %s align-check optimal 3' % disk)
    print "Creating LVM"
    run('dmsetup remove_all || /bin/true')
    run('pvcreate -ff -y --dataalignment 512k %s%d' % (disk, 3))
    run('vgcreate -f -y --dataalignment 512k rootfs %s%d' % (disk, 3))
    run('lvcreate rootfs -n swap -L 128M')
    run('lvcreate rootfs -n slash -L 200G')
    print "Creating FS"
    run('mkfs.ext4 -L boot -m 0 %s%d' % (disk,2))
    run('mkfs.ext4 -L slash -m 0 -O extent -E stride=32,stripe_width=32 /dev/mapper/rootfs-slash')
    run('mkswap -f /dev/mapper/rootfs-swap')
    run('mount LABEL=slash %s' % path)
    run('mkdir %s/etc %s/boot' % (path, path))
    run('mount LABEL=boot %s/boot' % path)
    config('/etc/fstab', mode='a').write('''
/dev/disk/by-id/dm-name-rootfs-swap none swap sw 0 0
LABEL=boot /boot ext4 defaults 0 2
''')

print '# Creating Ceph disks'
for idx in range(1, 5):
    disk_name = 'perc8_%d' % idx
    disk_path = '/dev/%s' % var[disk_name]
    print '# Creating disk%d (%s)' % (idx, var[disk_name])
    print "# -> %s" % disk_path
    print
    run('dd if=/dev/zero of=%s bs=1M count=100 conv=sync' % disk_path)
    run('hdparm -z %s' % disk_path)
    run('parted -a optimal --script %s mktable gpt' % disk_path)
    sleep(0.5)
    run('parted -a optimal --script %s mkpart ceph 0%% 100%%' % disk_path)
    sleep(0.5)
    run('dmsetup remove_all || /bin/true')
    run('mkfs.xfs -f -d agcount=%s -l size=1024m -n size=64k -i size=2048 %s1' % (var['nbcpu'], disk_path))
    run('lvcreate rootfs -n journal-%s1 -L 8G' % var[disk_name])


config('/etc/network/interfaces').write('''
auto lo
iface lo inet loopback

auto eth0
allow-hotplug eth0
iface eth0 inet static
     address %(ip0)s
     netmask %(netmask0)s
     gateway %(gateway0)s
     hwaddress %(mac0)s

auto eth1
allow-hotplug eth1
iface eth1 inet static
     address %(ip1)s
     netmask %(netmask1)s
     hwaddress %(mac1)s

auto eth3
allow-hotplug eth3
iface eth3 inet static
     address %(ip3)s
     netmask %(netmask3)s
     hwaddress %(mac3)s

''' % var)

run('mkdir -p /post_rsync/etc/sysconfig/network-scripts')
config('/etc/sysconfig/network', 'w').write('''
NETWORKING=yes
NETWORKING_IPV6=yes
HOSTNAME=%(hostname)s
''' % var)

config('/etc/sysconfig/network-scripts/ifcfg-eth0', 'w').write('''
DEVICE=%(eth0)s
BOOTPROTO=none
IPADDR=%(ip0)s
NETMASK=%(netmask0)s
GATEWAY=%(gateway0)s
HWADDR=%(mac0)s
ONBOOT=yes
RESOLV_MODS=no
LINK_DETECTION_DELAY=6
''' % var)

config('/etc/sysconfig/network-scripts/ifcfg-eth1', 'w').write('''
DEVICE=%(eth1)s
BOOTPROTO=none
IPADDR=%(ip1)s
NETMASK=%(netmask1)s
#GATEWAY=%(gateway1)s
HWADDR=%(mac1)s
ONBOOT=yes
RESOLV_MODS=no
LINK_DETECTION_DELAY=6
''' % var)

config('/etc/sysconfig/network-scripts/ifcfg-eth3', 'w').write('''
DEVICE=%(eth3)s
BOOTPROTO=none
IPADDR=%(ip3)s
NETMASK=%(netmask3)s
#GATEWAY=%(gateway3)s
HWADDR=%(mac3)s
ONBOOT=yes
RESOLV_MODS=no
LINK_DETECTION_DELAY=6
''' % var)


config('/etc/hostname').write('''%(hostname)s
''' % var)

set_role('openstack-full', 'RH6.5-H.1.3.0', bootable_disk)
