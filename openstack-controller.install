#!/bin/bash
#
# Copyright (C) 2013 eNovance SAS <licensing@enovance.com>
#
# Author: Emilien Macchi <emilien.macchi@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

src="$1"
dir="$2"
version="$3"
ROLE=openstack-compute

ORIG=$(cd $(dirname $0); pwd)

. ${ORIG}/functions

chroot ${dir} bash -c "cd /etc/puppet/modules; test -d nova || /usr/bin/git clone git://github.com/enovance/puppet-nova.git nova"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d glance || /usr/bin/git clone git://github.com/enovance/puppet-glance.git glance"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d cinder || /usr/bin/git clone git://github.com/enovance/puppet-cinder.git cinder"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d ceilometer || /usr/bin/git clone git://github.com/enovance/puppet-ceilometer.git ceilometer"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d mongodb || /usr/bin/git clone git://github.com/enovance/puppetlabs-mongodb.git mongodb"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d horizon || /usr/bin/git clone git://github.com/enovance/puppet-horizon.git horizon"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d keystone || /usr/bin/git clone git://github.com/enovance/puppet-keystone.git keystone"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d quantum || /usr/bin/git clone git://github.com/enovance/puppet-quantum.git quantum"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d vswitch || /usr/bin/git clone git://github.com/enovance/puppet-vswitch.git vswitch"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d stdlib || /usr/bin/git clone git://github.com/enovance/puppetlabs-stdlib.git stdlib"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d concat || /usr/bin/git clone git://github.com/enovance/puppet-concat.git concat"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d inifile || /usr/bin/git clone git://github.com/enovance/puppetlabs-inifile.git inifile"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d memcached || /usr/bin/git clone git://github.com/enovance/puppet-memcached.git memcached"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d rabbitmq || /usr/bin/git clone git://github.com/enovance/puppetlabs-rabbitmq.git rabbitmq"
test -d ${dir}/etc/puppet/modules/apt || chroot ${dir} puppet module install puppetlabs/apt --ignore-dependencies

cat > ${dir}/etc/puppet/manifests/install.manifest <<EOF
class{'apt':
  always_apt_update    => true,
  purge_sources_list_d => false,
  purge_preferences_d  => true,
}

apt::source {'debian.pkgs.enovance.com':
    location => '[trusted=1] ftp://debian.pkgs.enovance.com/debian',
    release => 'grizzly',
    include_src => false,
}

apt::source {'wheezy-backport':
    location => '[trusted=1] http://archive.gplhost.com/debian/',
    release => 'grizzly-backports',
    include_src => false,
}

class { 'quantum':
  rpc_backend => 'quantum.openstack.common.rpc.impl_fake',
}

class { 'quantum::agents::ovs': }

class { 'quantum::plugins::ovs': }

class { 'quantum::server':
  auth_password => 'secrete',
}

class { 'glance': }

class { 'glance::api':
  keystone_password => 'secrete',
}

class { 'glance::registry':
  keystone_password => 'secrete',
}

class { 'cinder':
  sql_connection => '://cinder:cinder@localhost/cinder?charset=utf8',
  rabbit_password => 'secrete',
}

class { 'cinder::api':
  keystone_password => 'secrete',
}

class { 'cinder::scheduler': }

class { 'mongodb': }

class { 'ceilometer':
  metering_secret => 'secrete',
}

class { 'ceilometer::api':
  keystone_password => 'secrete',
}

class { 'ceilometer::db':
  database_connection => 'mongodb://ceilometer:ceilometer@ceilometer/ceilometer',
}

class { 'ceilometer::collector': }

class { 'ceilometer::agent::central': }

class { 'memcached':
  max_memory => '60%',
}

class { 'keystone':
  admin_token => 'secrete',
}

class { 'nova::rabbitmq': }

class { 'nova': }

class { 'nova::api':
  admin_password => 'secrete',
}

resources { 'nova_config': }

# Not yet upstream :
# class { 'nova::spicehtml5proxy': }
EOF

chroot ${dir} puppet apply /etc/puppet/manifests/install.manifest
