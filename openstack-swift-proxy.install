#!/bin/bash
#
# openstack-swift-proxy role for eDeploy
#
# Copyright Â© 2013 eNovance <licensing@enovance.com>
#
# Author: Emilien Macchi <emilien.macchi@enovance.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

src="$1"
dir="$2"
version="$3"
ROLE=openstack-swift-proxy

if [ -z "$2" -o ! -d "$1" -o -z "$version" ]; then
   echo "Usage: $0 <base directory> <target directory name> <version>" 1>&2
   exit 1
fi

set -e
set -x

test -d ${dir} || rsync -av ${src}/ ${dir}/

echo $ROLE > ${dir}/etc/hostname

export DEBIAN_FRONTEND=noninteractive

chroot ${dir} apt-get update
chroot ${dir} apt-get install -y --force-yes git puppet-common wget lsb-release openssh-server
chroot ${dir} apt-get clean

chroot ${dir} bash -c "cd /etc/puppet/modules; test -d swift || /usr/bin/git clone https://github.com/enovance/puppet-swift.git swift"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d keystone || /usr/bin/git clone https://github.com/enovance/puppet-keystone.git keystone"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d mysql || /usr/bin/git clone https://github.com/enovance/puppetlabs-mysql.git mysql"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d rsync || /usr/bin/git clone https://github.com/enovance/puppetlabs-rsync.git rsync"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d stdlib || /usr/bin/git clone https://github.com/enovance/puppetlabs-stdlib.git stdlib"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d concat || /usr/bin/git clone https://github.com/enovance/puppet-concat.git concat"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d xinetd|| /usr/bin/git clone https://github.com/enovance/puppet-xinetd.git xinetd"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d memcached || /usr/bin/git clone https://github.com/enovance/puppet-memcached.git memcached"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d ssh || /usr/bin/git clone https://github.com/enovance/puppet-ssh.git ssh"
test -d ${dir}/etc/puppet/modules/apt || chroot ${dir} puppet module install puppetlabs/apt --ignore-dependencies

cat > ${dir}/etc/puppet/manifests/install.manifest <<EOF
class{'apt':
  always_apt_update    => true,
  purge_sources_list_d => false,
  purge_preferences_d  => true,
}

apt::source {'debian.pkgs.enovance.com':
    location => '[trusted=1] ftp://debian.pkgs.enovance.com/debian',
    release => 'grizzly',
    include_src => false,
}

apt::source {'wheezy-backport':
    location => '[trusted=1] http://archive.gplhost.com/debian/',
    release => 'grizzly-backports',
    include_src => false,
}

class { 'swift':
  swift_hash_suffix => 'secret',
  package_ensure => latest,
}

class { 'memcached':
  listen_ip => '127.0.0.1',
}

class { 'swift::proxy':
  proxy_local_net_ip => '127.0.0.1',
  pipeline           => [
    'catch_errors',
    'healthcheck',
    'cache',
    'ratelimit',
    'swift3',
    's3token',
    'authtoken',
    'keystone',
    'proxy-server'
  ],
}

class { [
  'swift::proxy::catch_errors',
  'swift::proxy::healthcheck',
  'swift::proxy::cache',
  'swift::proxy::swift3',
]: }

class { [
  'swift::proxy::catch_errors',
  'swift::proxy::healthcheck',
  'swift::proxy::cache',
  'swift::proxy::swift3',
]: }

class { 'swift::proxy::ratelimit':
  clock_accuracy         => 1000,
  max_sleep_time_seconds => 60,
  log_sleep_time_seconds => 0,
  rate_buffer_seconds    => 5,
  account_ratelimit      => 0
}

class { 'swift::proxy::s3token':
  auth_host     => '127.0.0.1',
  auth_port     => '35357',
}

class { 'swift::proxy::authtoken':
  admin_user        => 'swift',
  admin_tenant_name => 'services',
  admin_password    => 'secrete',
  auth_host         => '127.0.0.1',
}

class { 'swift::proxy::keystone':
  operator_roles => ['admin', 'SwiftOperator'],
}
EOF

chroot ${dir} puppet apply /etc/puppet/manifests/install.manifest

echo -e "\nVersion ${version}\n" > ${dir}/etc/motd
echo -e "VERS=${version}\nROLE=${ROLE}\n" > ${dir}/var/lib/edeploy/conf
