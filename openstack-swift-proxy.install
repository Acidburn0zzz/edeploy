#!/bin/bash
#
# Copyright (C) 2013 eNovance SAS <licensing@enovance.com>
#
# Author: Emilien Macchi <emilien.macchi@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

src="$1"
dir="$2"
version="$3"
ROLE=openstack-swift-proxy

ORIG=$(cd $(dirname $0); pwd)

. ${ORIG}/functions

chroot ${dir} bash -c "cd /etc/puppet/modules; test -d swift || /usr/bin/git clone git://github.com/enovance/puppet-swift.git swift"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d keystone || /usr/bin/git clone git://github.com/enovance/puppet-keystone.git keystone"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d mysql || /usr/bin/git clone git://github.com/enovance/puppetlabs-mysql.git mysql"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d rsync || /usr/bin/git clone git://github.com/enovance/puppetlabs-rsync.git rsync"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d stdlib || /usr/bin/git clone git://github.com/enovance/puppetlabs-stdlib.git stdlib"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d concat || /usr/bin/git clone git://github.com/enovance/puppet-concat.git concat"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d xinetd|| /usr/bin/git clone git://github.com/enovance/puppet-xinetd.git xinetd"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d memcached || /usr/bin/git clone git://github.com/enovance/puppet-memcached.git memcached"
chroot ${dir} bash -c "cd /etc/puppet/modules; test -d ssh || /usr/bin/git clone git://github.com/enovance/puppet-ssh.git ssh"
test -d ${dir}/etc/puppet/modules/apt || chroot ${dir} puppet module install puppetlabs/apt --ignore-dependencies

cat > ${dir}/etc/puppet/manifests/install.manifest <<EOF
class{'apt':
  always_apt_update    => true,
  purge_sources_list_d => false,
  purge_preferences_d  => true,
}

apt::source {'debian.pkgs.enovance.com':
    location => '[trusted=1] ftp://debian.pkgs.enovance.com/debian',
    release => 'grizzly',
    include_src => false,
}

apt::source {'wheezy-backport':
    location => '[trusted=1] http://archive.gplhost.com/debian/',
    release => 'grizzly-backports',
    include_src => false,
}

class { 'swift':
  swift_hash_suffix => 'secret',
  package_ensure => latest,
}

class { 'memcached':
  listen_ip => '127.0.0.1',
}

class { 'swift::proxy':
  proxy_local_net_ip => '127.0.0.1',
  pipeline           => [
    'catch_errors',
    'healthcheck',
    'cache',
    'ratelimit',
    'swift3',
    's3token',
    'authtoken',
    'keystone',
    'proxy-server'
  ],
}

class { [
  'swift::proxy::catch_errors',
  'swift::proxy::healthcheck',
  'swift::proxy::cache',
  'swift::proxy::swift3',
]: }

class { [
  'swift::proxy::catch_errors',
  'swift::proxy::healthcheck',
  'swift::proxy::cache',
  'swift::proxy::swift3',
]: }

class { 'swift::proxy::ratelimit':
  clock_accuracy         => 1000,
  max_sleep_time_seconds => 60,
  log_sleep_time_seconds => 0,
  rate_buffer_seconds    => 5,
  account_ratelimit      => 0
}

class { 'swift::proxy::s3token':
  auth_host     => '127.0.0.1',
  auth_port     => '35357',
}

class { 'swift::proxy::authtoken':
  admin_user        => 'swift',
  admin_tenant_name => 'services',
  admin_password    => 'secrete',
  auth_host         => '127.0.0.1',
}

class { 'swift::proxy::keystone':
  operator_roles => ['admin', 'SwiftOperator'],
}
EOF

chroot ${dir} puppet apply /etc/puppet/manifests/install.manifest
